{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\abanm\\\\Desktop\\\\ADG-Recruitment-Portal-2k20\\\\src\\\\components\\\\Forms\\\\SignUp\\\\Login\\\\Login.js\";\nimport Background from \"../../../../hoc/Background/Background\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Recaptcha from \"react-google-invisible-recaptcha\";\nimport adggif from \"../../../../assets/img/adggif.gif\";\nexport class Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      regno: \"\",\n      password: \"\",\n      regError: \"\",\n      passError: \"\",\n      showPass: false,\n      err: \"\",\n      value: \"\",\n      loading: false\n    };\n\n    this.validate = () => {\n      let regError = \"\";\n      let passError = \"\";\n      var regPattern = /^[12][09][A-Za-z][A-Za-z][A-Za-z]\\d{4}$/;\n\n      if (!this.state.regno) {\n        regError = \"Enter Registration Number\";\n      } else if (!regPattern.test(this.state.regno)) {\n        regError = \"Enter a valid Registration Number\";\n      }\n\n      if (!this.state.password) {\n        passError = \"Enter Password\";\n      }\n\n      if (regError || passError) {\n        this.setState({\n          regError,\n          passError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.inputChangeHandler = (e, s) => {\n      this.setState({\n        [s]: e.target.value\n      });\n    };\n\n    this.formSubmitHandler = (e, a) => {\n      this.validate();\n      this.setState({\n        regError: \"\",\n        passError: \"\"\n      });\n\n      if (this.validate()) {\n        this.recaptcha.execute();\n      } else {\n        this.recaptcha.reset();\n      }\n    };\n\n    this.eyeClickHandler = () => {\n      this.setState({\n        showPass: !this.state.showPass\n      });\n    };\n\n    this.onResolved = a => {\n      // alert(\"Recaptcha resolved with response: \" + this.recaptcha.getResponse());\n      const data = JSON.stringify({\n        regno: this.state.regno,\n        password: this.state.password\n      }); // console.log(data);\n\n      var config = {\n        method: \"post\",\n        url: \"https://adgrecruitments.herokuapp.com/user/login\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: data // onUploadProgress: function (progressEvent) {\n        //   // let percentCompleted = Math.round(\n        //   //   (progressEvent.loaded * 100) / progressEvent.total\n        //   // );\n        //   // console.log(\"onUploadProgress\", percentCompleted);\n        // },\n\n      };\n      this.setState({\n        loading: true\n      });\n      axios(config).then(response => {\n        sessionStorage.setItem(\"Token\", response.data.Token); // console.log(response.data);\n\n        this.setState({\n          loading: false\n        });\n        a.history.push(\"/selection\");\n      }).catch(error => {\n        var _error$response, _error$response$data;\n\n        alert(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message);\n        this.setState({\n          loading: false\n        }); // console.log(error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (sessionStorage.getItem(\"Token\")) {\n      this.props.history.replace(\"/selection\");\n    }\n  }\n\n  render() {\n    const loader = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"135px auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: adggif,\n        height: 105,\n        alt: \"ADG gif loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(Background, {\n        children: loader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-grp\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"p2\",\n            children: \"Registration Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input t-uc\",\n            type: \"text\",\n            placeholder: \"Enter Registration Number\",\n            onChange: event => {\n              this.inputChangeHandler(event, \"regno\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), this.state.regError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: this.state.regError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-grp\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"p1\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: `${this.state.showPass ? \"text\" : \"password\"}`,\n            placeholder: \"Enter Your Password\",\n            style: {\n              marginBottom: 10,\n              position: \"relative\"\n            },\n            onChange: event => {\n              this.inputChangeHandler(event, \"password\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `lgn-eye ${this.state.showPass ? \"lgn-eye-t\" : null}`,\n            onClick: this.eyeClickHandler,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: `fas fa-eye  `\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), this.state.passError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: this.state.passError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forgot-pass\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgotPassword\",\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn-blue lgn-btn\",\n          onClick: event => {\n            this.formSubmitHandler(event, this.props);\n          },\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Recaptcha, {\n        ref: ref => this.recaptcha = ref,\n        sitekey: \"6LerFBIaAAAAAPrLv6zWVFAZ7VQYGE8DfbUXyt8r\\r\\n\",\n        onResolved: () => this.onResolved(this.props),\n        onError: () => {\n          alert(\"Captcha Error : Please refresh site and try again\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nexport default Login;","map":{"version":3,"sources":["C:/Users/abanm/Desktop/ADG-Recruitment-Portal-2k20/src/components/Forms/SignUp/Login/Login.js"],"names":["Background","React","Component","axios","Link","Recaptcha","adggif","Login","state","regno","password","regError","passError","showPass","err","value","loading","validate","regPattern","test","setState","inputChangeHandler","e","s","target","formSubmitHandler","a","recaptcha","execute","reset","eyeClickHandler","onResolved","data","JSON","stringify","config","method","url","headers","then","response","sessionStorage","setItem","Token","history","push","catch","error","alert","message","componentDidMount","getItem","props","replace","render","loader","margin","event","marginBottom","position","ref"],"mappings":"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","sourcesContent":["import Background from \"../../../../hoc/Background/Background\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Recaptcha from \"react-google-invisible-recaptcha\";\r\nimport adggif from \"../../../../assets/img/adggif.gif\";\r\n\r\nexport class Login extends Component {\r\n  state = {\r\n    regno: \"\",\r\n    password: \"\",\r\n    regError: \"\",\r\n    passError: \"\",\r\n    showPass: false,\r\n    err: \"\",\r\n    value: \"\",\r\n    loading: false,\r\n  };\r\n\r\n  validate = () => {\r\n    let regError = \"\";\r\n    let passError = \"\";\r\n    var regPattern = /^[12][09][A-Za-z][A-Za-z][A-Za-z]\\d{4}$/;\r\n\r\n    if (!this.state.regno) {\r\n      regError = \"Enter Registration Number\";\r\n    } else if (!regPattern.test(this.state.regno)) {\r\n      regError = \"Enter a valid Registration Number\";\r\n    }\r\n\r\n    if (!this.state.password) {\r\n      passError = \"Enter Password\";\r\n    }\r\n\r\n    if (regError || passError) {\r\n      this.setState({ regError, passError });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  inputChangeHandler = (e, s) => {\r\n    this.setState({ [s]: e.target.value });\r\n  };\r\n  formSubmitHandler = (e, a) => {\r\n    this.validate();\r\n    this.setState({ regError: \"\", passError: \"\" });\r\n    if (this.validate()) {\r\n      this.recaptcha.execute();\r\n    } else {\r\n      this.recaptcha.reset();\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    if (sessionStorage.getItem(\"Token\")) {\r\n      this.props.history.replace(\"/selection\");\r\n    }\r\n  }\r\n  eyeClickHandler = () => {\r\n    this.setState({ showPass: !this.state.showPass });\r\n  };\r\n  onResolved = (a) => {\r\n    // alert(\"Recaptcha resolved with response: \" + this.recaptcha.getResponse());\r\n    const data = JSON.stringify({\r\n      regno: this.state.regno,\r\n      password: this.state.password,\r\n    });\r\n\r\n    // console.log(data);\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"https://adgrecruitments.herokuapp.com/user/login\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: data,\r\n      // onUploadProgress: function (progressEvent) {\r\n      //   // let percentCompleted = Math.round(\r\n      //   //   (progressEvent.loaded * 100) / progressEvent.total\r\n      //   // );\r\n      //   // console.log(\"onUploadProgress\", percentCompleted);\r\n      // },\r\n    };\r\n\r\n    this.setState({ loading: true });\r\n    axios(config)\r\n      .then((response) => {\r\n        sessionStorage.setItem(\"Token\", response.data.Token);\r\n        // console.log(response.data);\r\n        this.setState({ loading: false });\r\n        a.history.push(\"/selection\");\r\n      })\r\n      .catch((error) => {\r\n        alert(error?.response?.data?.message);\r\n        this.setState({ loading: false });\r\n        // console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    const loader = (\r\n      <div style={{ margin: \"135px auto\" }}>\r\n        <img src={adggif} height={105} alt='ADG gif loader' />\r\n      </div>\r\n    );\r\n    if (this.state.loading) {\r\n      return <Background>{loader}</Background>;\r\n    }\r\n    return (\r\n      <>\r\n        <Background>\r\n          <div className='heading'>Log In</div>\r\n          <div className='input-grp'>\r\n            <label id='p2'>Registration Number</label>\r\n            <input\r\n              className='input t-uc'\r\n              type='text'\r\n              placeholder='Enter Registration Number'\r\n              onChange={(event) => {\r\n                this.inputChangeHandler(event, \"regno\");\r\n              }}\r\n            />\r\n          </div>\r\n          {this.state.regError ? (\r\n            <div className='error'>{this.state.regError}</div>\r\n          ) : null}\r\n          <div className='input-grp'>\r\n            <label id='p1'>Password</label>\r\n            <input\r\n              className='input'\r\n              type={`${this.state.showPass ? \"text\" : \"password\"}`}\r\n              placeholder='Enter Your Password'\r\n              style={{ marginBottom: 10, position: \"relative\" }}\r\n              onChange={(event) => {\r\n                this.inputChangeHandler(event, \"password\");\r\n              }}\r\n            />\r\n            <div\r\n              className={`lgn-eye ${this.state.showPass ? \"lgn-eye-t\" : null}`}\r\n              onClick={this.eyeClickHandler}>\r\n              <i className={`fas fa-eye  `}></i>\r\n            </div>\r\n          </div>\r\n          {this.state.passError ? (\r\n            <div className='error'>{this.state.passError}</div>\r\n          ) : null}\r\n          <div className='forgot-pass'>\r\n            <Link to='/forgotPassword'>Forgot Password?</Link>\r\n          </div>\r\n          <div\r\n            className='btn btn-blue lgn-btn'\r\n            onClick={(event) => {\r\n              this.formSubmitHandler(event, this.props);\r\n            }}>\r\n            Log In\r\n          </div>\r\n        </Background>\r\n        <Recaptcha\r\n          ref={(ref) => (this.recaptcha = ref)}\r\n          sitekey='6LerFBIaAAAAAPrLv6zWVFAZ7VQYGE8DfbUXyt8r\r\n'\r\n          onResolved={() => this.onResolved(this.props)}\r\n          onError={() => {\r\n            alert(\"Captcha Error : Please refresh site and try again\");\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}