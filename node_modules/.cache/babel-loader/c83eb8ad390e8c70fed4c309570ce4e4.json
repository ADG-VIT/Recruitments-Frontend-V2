{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\abanm\\\\Desktop\\\\ADG-Recruitment-Portal-2k20\\\\src\\\\components\\\\Forms\\\\SignUp\\\\ForgotPassword\\\\ForgotPassword.js\";\nimport React, { Component } from \"react\";\nimport Background from \"../../../../hoc/Background/Background\";\nimport axios from \"axios\";\nimport Recaptcha from \"react-google-invisible-recaptcha\";\nimport adggif from \"../../../../assets/img/adggif.gif\";\nexport class ForgotPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstPage: true,\n      email: \"\",\n      emailErr: \"\",\n      otp: \"\",\n      otpErr: \"\",\n      newPassword: \"\",\n      newPasswordErr: \"\",\n      confirmPassword: \"\",\n      confirmPasswordErr: \"\",\n      err: \"\",\n      cooldown: 60,\n      loading: false\n    };\n\n    this.forgotPasswordClickHandler = event => {\n      event.preventDefault();\n      var re = /^[a-zA-Z0-9.!#$%&'+=?^_`{|}~-]+@vitstudent.ac.in$/;\n\n      if (this.state.email === \"\") {\n        this.setState({\n          emailErr: \"Please enter your Email ID\"\n        });\n        return;\n      } else if (!re.test(this.state.email)) {\n        this.setState({\n          emailErr: \"Enter a valid Email ID\"\n        });\n        return;\n      }\n\n      const data = JSON.stringify({\n        email: this.state.email\n      });\n      const config = {\n        method: \"post\",\n        url: \"https://adgrecruitments.herokuapp.com/user/resetpassword\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: data\n      };\n      this.setState({\n        loading: true\n      });\n      axios(config).then(response => {\n        // console.log(response.data);\n        this.setState({\n          firstPage: false\n        });\n        this.setState({\n          loading: false\n        });\n      }).catch(error => {\n        // console.log(error.response.data);\n        this.setState({\n          loading: false\n        });\n        this.setState({\n          emailErr: error.response.data.message\n        });\n      });\n    };\n\n    this.inputChangeHandler = (e, s) => {\n      this.setState({\n        [s]: e.target.value\n      });\n    };\n\n    this.formSubmitHandler = (e, a) => {\n      e.preventDefault();\n      this.setState({\n        otpErr: \"\"\n      });\n\n      if (!this.state.otp) {\n        this.setState({\n          otpErr: \"Enter valid OTP\"\n        });\n      }\n\n      if (this.state.newPassword.length < 8) {\n        this.setState({\n          newPasswordErr: \"Password must be at least 8 characters\"\n        });\n        this.recaptcha.reset();\n        return;\n      }\n\n      if (this.state.newPassword !== this.state.confirmPassword) {\n        this.setState({\n          confirmPasswordErr: \"Passwords must match\"\n        });\n        this.recaptcha.reset();\n        return;\n      } else {\n        this.recaptcha.execute();\n      }\n    };\n\n    this.onResolved = a => {\n      // alert( 'Recaptcha resolved with response: ' + this.recaptcha.getResponse() );\n      const data = JSON.stringify({\n        // email: this.state.email,\n        otp: this.state.otp,\n        password: this.state.newPassword // confirmPassword: this.state.confirmPassword,\n\n      });\n      const config = {\n        method: \"PUT\",\n        url: \"https://adgrecruitments.herokuapp.com/user/updatepassword\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: data\n      };\n      axios(config).then(function (response) {\n        // console.log(JSON.stringify(response.data));\n        a.history.push(\"/login\");\n      }).catch(function (error) {\n        // console.log(error);\n        alert(error.response.data.message);\n      });\n    };\n\n    this.countdown = () => {\n      let cooldownTimer = setInterval(() => {\n        this.setState({\n          cooldown: this.state.cooldown - 1\n        });\n\n        if (this.state.cooldown <= 0) {\n          this.setState({\n            cooldown: 0\n          });\n          clearInterval(cooldownTimer);\n        }\n      }, 1000);\n    };\n  }\n\n  render() {\n    const loader = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"65px auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: adggif,\n        height: 105,\n        alt: \"ADG gif loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(Background, {\n        children: loader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: event => {\n            event.preventDefault();\n          },\n          children: this.state.firstPage ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"heading\",\n              children: \"Forgot Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-grp\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                type: \"text\",\n                placeholder: \"Enter Email\",\n                value: this.state.email,\n                onChange: event => {\n                  this.inputChangeHandler(event, \"email\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this), this.state.messageErr !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: this.state.emailErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn btn-blue lgn-btn\",\n              onClick: event => {\n                event.preventDefault();\n                this.forgotPasswordClickHandler(event);\n                this.countdown();\n                this.setState({\n                  cooldown: 0\n                });\n              },\n              children: \"Send OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"heading\",\n              children: \"Change Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-grp\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"OTP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                type: \"number\",\n                placeholder: \"Enter OTP\",\n                value: this.state.otp,\n                onChange: event => {\n                  this.inputChangeHandler(event, \"otp\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this), this.state.otpErr !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: this.state.otpErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-grp\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                type: \"password\",\n                placeholder: \"Enter Password\",\n                value: this.state.newPassword,\n                onChange: event => {\n                  this.inputChangeHandler(event, \"newPassword\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this), this.state.newPasswordErr !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: this.state.newPasswordErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-grp\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                type: \"password\",\n                placeholder: \"Confirm Password\",\n                value: this.state.confirmPassword,\n                onChange: event => {\n                  this.inputChangeHandler(event, \"confirmPassword\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), this.state.confirmPasswordErr !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: this.state.confirmPasswordErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn btn-blue lgn-btn\",\n                onClick: event => {\n                  event.preventDefault();\n                  this.formSubmitHandler(event, this.props);\n                },\n                children: \"Change Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: !!this.state.cooldown,\n                className: \"btn btn-blue lgn-btn\",\n                onClick: event => {\n                  event.preventDefault();\n                  this.setState({\n                    cooldown: 60\n                  });\n                  this.forgotPasswordClickHandler(event);\n                  this.countdown();\n                },\n                children: this.state.cooldown > 0 ? this.state.cooldown : \"Resend OTP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Recaptcha, {\n        ref: ref => this.recaptcha = ref,\n        sitekey: \"6LerFBIaAAAAAPrLv6zWVFAZ7VQYGE8DfbUXyt8r\\r\\n\",\n        onResolved: () => this.onResolved(this.props),\n        onError: () => {\n          alert(\"Captcha Error : Please refresh site and try again\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nexport default ForgotPassword;","map":{"version":3,"sources":["C:/Users/abanm/Desktop/ADG-Recruitment-Portal-2k20/src/components/Forms/SignUp/ForgotPassword/ForgotPassword.js"],"names":["React","Component","Background","axios","Recaptcha","adggif","ForgotPassword","state","firstPage","email","emailErr","otp","otpErr","newPassword","newPasswordErr","confirmPassword","confirmPasswordErr","err","cooldown","loading","forgotPasswordClickHandler","event","preventDefault","re","setState","test","data","JSON","stringify","config","method","url","headers","then","response","catch","error","message","inputChangeHandler","e","s","target","value","formSubmitHandler","a","length","recaptcha","reset","execute","onResolved","password","history","push","alert","countdown","cooldownTimer","setInterval","clearInterval","render","loader","margin","messageErr","display","props","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Background from \"../../../../hoc/Background/Background\";\r\nimport axios from \"axios\";\r\nimport Recaptcha from \"react-google-invisible-recaptcha\";\r\nimport adggif from \"../../../../assets/img/adggif.gif\";\r\n\r\nexport class ForgotPassword extends Component {\r\n  state = {\r\n    firstPage: true,\r\n    email: \"\",\r\n    emailErr: \"\",\r\n    otp: \"\",\r\n    otpErr: \"\",\r\n    newPassword: \"\",\r\n    newPasswordErr: \"\",\r\n    confirmPassword: \"\",\r\n    confirmPasswordErr: \"\",\r\n    err: \"\",\r\n    cooldown: 60,\r\n    loading: false,\r\n  };\r\n  forgotPasswordClickHandler = (event) => {\r\n    event.preventDefault();\r\n    var re = /^[a-zA-Z0-9.!#$%&'+=?^_`{|}~-]+@vitstudent.ac.in$/;\r\n\r\n    if (this.state.email === \"\") {\r\n      this.setState({ emailErr: \"Please enter your Email ID\" });\r\n      return;\r\n    } else if (!re.test(this.state.email)) {\r\n      this.setState({ emailErr: \"Enter a valid Email ID\" });\r\n      return;\r\n    }\r\n    const data = JSON.stringify({\r\n      email: this.state.email,\r\n    });\r\n    const config = {\r\n      method: \"post\",\r\n      url: \"https://adgrecruitments.herokuapp.com/user/resetpassword\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: data,\r\n    };\r\n    this.setState({ loading: true });\r\n\r\n    axios(config)\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        this.setState({ firstPage: false });\r\n        this.setState({ loading: false });\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error.response.data);\r\n        this.setState({ loading: false });\r\n        this.setState({ emailErr: error.response.data.message });\r\n      });\r\n  };\r\n  inputChangeHandler = (e, s) => {\r\n    this.setState({ [s]: e.target.value });\r\n  };\r\n  formSubmitHandler = (e, a) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      otpErr: \"\",\r\n    });\r\n\r\n    if (!this.state.otp) {\r\n      this.setState({\r\n        otpErr: \"Enter valid OTP\",\r\n      });\r\n    }\r\n\r\n    if (this.state.newPassword.length < 8) {\r\n      this.setState({\r\n        newPasswordErr: \"Password must be at least 8 characters\",\r\n      });\r\n      this.recaptcha.reset();\r\n      return;\r\n    }\r\n    if (this.state.newPassword !== this.state.confirmPassword) {\r\n      this.setState({ confirmPasswordErr: \"Passwords must match\" });\r\n      this.recaptcha.reset();\r\n      return;\r\n    } else {\r\n      this.recaptcha.execute();\r\n    }\r\n  };\r\n  onResolved = (a) => {\r\n    // alert( 'Recaptcha resolved with response: ' + this.recaptcha.getResponse() );\r\n    const data = JSON.stringify({\r\n      // email: this.state.email,\r\n      otp: this.state.otp,\r\n      password: this.state.newPassword,\r\n      // confirmPassword: this.state.confirmPassword,\r\n    });\r\n    const config = {\r\n      method: \"PUT\",\r\n      url: \"https://adgrecruitments.herokuapp.com/user/updatepassword\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        a.history.push(\"/login\");\r\n      })\r\n      .catch(function (error) {\r\n        // console.log(error);\r\n        alert(error.response.data.message);\r\n      });\r\n  };\r\n\r\n  countdown = () => {\r\n    let cooldownTimer = setInterval(() => {\r\n      this.setState({ cooldown: this.state.cooldown - 1 });\r\n      if (this.state.cooldown <= 0) {\r\n        this.setState({ cooldown: 0 });\r\n        clearInterval(cooldownTimer);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  render() {\r\n    const loader = (\r\n      <div style={{ margin: \"65px auto\" }}>\r\n        <img src={adggif} height={105} alt='ADG gif loader' />\r\n      </div>\r\n    );\r\n    if (this.state.loading) {\r\n      return <Background>{loader}</Background>;\r\n    }\r\n    return (\r\n      <>\r\n        <Background>\r\n          <form\r\n            onSubmit={(event) => {\r\n              event.preventDefault();\r\n            }}>\r\n            {this.state.firstPage ? (\r\n              <div>\r\n                <div className='heading'>Forgot Password</div>\r\n                <div className='input-grp'>\r\n                  <label>Email</label>\r\n                  <input\r\n                    className='input'\r\n                    type='text'\r\n                    placeholder='Enter Email'\r\n                    value={this.state.email}\r\n                    onChange={(event) => {\r\n                      this.inputChangeHandler(event, \"email\");\r\n                    }}\r\n                  />\r\n                  {this.state.messageErr !== \"\" && (\r\n                    <div className='error'>{this.state.emailErr}</div>\r\n                  )}\r\n                </div>\r\n                <div\r\n                  className='btn btn-blue lgn-btn'\r\n                  onClick={(event) => {\r\n                    event.preventDefault();\r\n                    this.forgotPasswordClickHandler(event);\r\n                    this.countdown();\r\n                    this.setState({ cooldown: 0 });\r\n                  }}>\r\n                  Send OTP\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <div className='heading'>Change Password</div>\r\n                <div className='input-grp'>\r\n                  <label>OTP</label>\r\n                  <input\r\n                    className='input'\r\n                    type='number'\r\n                    placeholder='Enter OTP'\r\n                    value={this.state.otp}\r\n                    onChange={(event) => {\r\n                      this.inputChangeHandler(event, \"otp\");\r\n                    }}\r\n                  />\r\n                  {this.state.otpErr !== \"\" && (\r\n                    <div className='error'>{this.state.otpErr}</div>\r\n                  )}\r\n                </div>\r\n                <div className='input-grp'>\r\n                  <label>New Password</label>\r\n                  <input\r\n                    className='input'\r\n                    type='password'\r\n                    placeholder='Enter Password'\r\n                    value={this.state.newPassword}\r\n                    onChange={(event) => {\r\n                      this.inputChangeHandler(event, \"newPassword\");\r\n                    }}\r\n                  />\r\n                  {this.state.newPasswordErr !== \"\" && (\r\n                    <div className='error'>{this.state.newPasswordErr}</div>\r\n                  )}\r\n                </div>\r\n                <div className='input-grp'>\r\n                  <label>Confirm Password</label>\r\n                  <input\r\n                    className='input'\r\n                    type='password'\r\n                    placeholder='Confirm Password'\r\n                    value={this.state.confirmPassword}\r\n                    onChange={(event) => {\r\n                      this.inputChangeHandler(event, \"confirmPassword\");\r\n                    }}\r\n                  />\r\n                  {this.state.confirmPasswordErr !== \"\" && (\r\n                    <div className='error'>{this.state.confirmPasswordErr}</div>\r\n                  )}\r\n                </div>\r\n                <div style={{ display: \"flex\" }}>\r\n                  <div\r\n                    className='btn btn-blue lgn-btn'\r\n                    onClick={(event) => {\r\n                      event.preventDefault();\r\n                      this.formSubmitHandler(event, this.props);\r\n                    }}>\r\n                    Change Password\r\n                  </div>\r\n                  <button\r\n                    disabled={!!this.state.cooldown}\r\n                    className='btn btn-blue lgn-btn'\r\n                    onClick={(event) => {\r\n                      event.preventDefault();\r\n                      this.setState({ cooldown: 60 });\r\n                      this.forgotPasswordClickHandler(event);\r\n                      this.countdown();\r\n                    }}>\r\n                    {this.state.cooldown > 0\r\n                      ? this.state.cooldown\r\n                      : \"Resend OTP\"}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </form>\r\n        </Background>\r\n        <Recaptcha\r\n          ref={(ref) => (this.recaptcha = ref)}\r\n          sitekey='6LerFBIaAAAAAPrLv6zWVFAZ7VQYGE8DfbUXyt8r\r\n'\r\n          onResolved={() => this.onResolved(this.props)}\r\n          onError={() => {\r\n            alert(\"Captcha Error : Please refresh site and try again\");\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n"]},"metadata":{},"sourceType":"module"}