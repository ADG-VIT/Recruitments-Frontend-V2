{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\abanm\\\\Desktop\\\\ADG-Recruitment-Portal-2k20\\\\src\\\\components\\\\Quiz\\\\TechQuiz.js\";\nimport React from \"react\";\nimport \"./Quiz.css\";\nimport Timer from \"./Timer\";\nimport Background from \"../../hoc/Background/Background\";\nimport { Redirect } from \"react-router-dom\";\nimport Modal from \"../Modals/Modal\";\n\nclass TechQuiz extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selectedOptions = [];\n    this.optionsArray = [\"a\", \"b\", \"c\", \"d\"];\n    this.state = {\n      quizQuestions: [],\n      currentQuestionIndex: 0,\n      questionId: [],\n      finalResponse: [],\n      optionsIndex1: [\"d\", \"d\", \"d\", \"e\", \"e\", \"e\", \"e\", \"e\", \"e\", \"e\"],\n      optionsIndex: [\"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\"],\n      showModal: false,\n      blueButton: \"blueButton\",\n      blackButton: \"blackButton\"\n    };\n    this.submitQuiz = this.submitQuiz.bind(this);\n    this.showModal1 = this.showModal1.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n  }\n\n  showModal1() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  hideModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  async getQuizQuestions() {\n    await fetch(\"https://adgrecruitments.herokuapp.com/questions/technical/get-quiz-questions/1/web\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": sessionStorage.getItem(\"Token\")\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      this.setState({\n        quizQuestions: data\n      });\n      this.generateResponse();\n    }).catch(error => {\n      alert(error.message);\n    });\n  }\n\n  async submitQuiz() {\n    await fetch(\"https://adgrecruitments.herokuapp.com/user/technical/submit\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": sessionStorage.getItem(\"Token\")\n      },\n      body: JSON.stringify(this.state.finalResponse)\n    }).then(response => {\n      this.props.history.push(\"thank-you\");\n      return response.json();\n    }).catch(error => {\n      alert(error.message);\n    });\n  }\n\n  getResponse() {\n    return this.state.finalResponse[this.state.currentQuestionIndex];\n  }\n\n  updateOption(qid, index) {\n    this.state.finalResponse.forEach(question => {\n      if (question.qid === qid) {\n        question.response = this.optionsArray[index];\n        this.setState({\n          blueButton: \"blackButton\"\n        });\n      }\n    });\n  }\n\n  generateResponse() {\n    this.state.quizQuestions.forEach(question => {\n      var temp = {\n        qid: question._id,\n        response: \"e\"\n      };\n      this.state.finalResponse.push(temp);\n    });\n  }\n\n  returnQuestionID() {\n    return this.state.quizQuestions[this.state.currentQuestionIndex]._id;\n  }\n\n  gotoNextQuestion() {\n    if (this.state.currentQuestionIndex < this.state.quizQuestions.length - 1) {\n      this.setState({\n        currentQuestionIndex: this.state.currentQuestionIndex + 1,\n        blueButton: \"blueButton\"\n      });\n    } else return;\n  }\n\n  gotoPreviousQuestion() {\n    if (this.state.currentQuestionIndex > 0) this.setState({\n      currentQuestionIndex: this.state.currentQuestionIndex - 1,\n      blueButton: \"blueButton\"\n    });else return;\n  }\n\n  componentDidMount() {\n    this.getQuizQuestions();\n  }\n\n  componentWillUnmount() {\n    this.submitQuiz();\n  }\n\n  render() {\n    if (!sessionStorage.getItem(\"Token\")) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Background, {\n      children: this.state.quizQuestions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: \"Technical Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-count\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Question\", \" \", this.state.currentQuestionIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 9\n            }, this), \"/\", this.state.quizQuestions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tech-quiz\",\n            children: this.state.quizQuestions[this.state.currentQuestionIndex].questionDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-section\",\n            children: Object.keys(this.state.quizQuestions[this.state.currentQuestionIndex].options).map((key, index) => {\n              if (this.state.finalResponse[this.state.currentQuestionIndex] === undefined) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => {\n                    this.updateOption(this.returnQuestionID(), index);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: this.state.blackButton,\n                    value: this.optionsArray[index],\n                    children: [this.optionsArray[index], \".\", \" \", this.state.quizQuestions[this.state.currentQuestionIndex].options[key]]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 13\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 12\n                }, this);\n              } else {\n                if (this.state.finalResponse[this.state.currentQuestionIndex].response === this.optionsArray[index]) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    onClick: () => {\n                      this.updateOption(this.returnQuestionID(), index);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: this.state.blueButton,\n                      value: this.optionsArray[index],\n                      children: [this.optionsArray[index], \".\", \" \", this.state.quizQuestions[this.state.currentQuestionIndex].options[key]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 14\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 13\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    onClick: () => {\n                      this.updateOption(this.returnQuestionID(), index);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: this.state.blackButton,\n                      value: this.optionsArray[index],\n                      children: [this.optionsArray[index], \".\", \" \", this.state.quizQuestions[this.state.currentQuestionIndex].options[key]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 14\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 13\n                  }, this);\n                }\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-bottom\",\n            children: [this.state.currentQuestionIndex === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: true,\n              id: \"disabled-btn\",\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 10\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.gotoPreviousQuestion();\n              },\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 10\n            }, this), this.state.currentQuestionIndex === 9 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.showModal1();\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 10\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.gotoNextQuestion();\n              },\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              show: this.state.showModal,\n              onHide: this.hideModal,\n              submitQuiz: this.submitQuiz\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer\",\n            children: /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default TechQuiz;","map":{"version":3,"sources":["C:/Users/abanm/Desktop/ADG-Recruitment-Portal-2k20/src/components/Quiz/TechQuiz.js"],"names":["React","Timer","Background","Redirect","Modal","TechQuiz","Component","constructor","props","selectedOptions","optionsArray","state","quizQuestions","currentQuestionIndex","questionId","finalResponse","optionsIndex1","optionsIndex","showModal","blueButton","blackButton","submitQuiz","bind","showModal1","hideModal","setState","getQuizQuestions","fetch","method","headers","sessionStorage","getItem","then","response","json","data","generateResponse","catch","error","alert","message","body","JSON","stringify","history","push","getResponse","updateOption","qid","index","forEach","question","temp","_id","returnQuestionID","gotoNextQuestion","length","gotoPreviousQuestion","componentDidMount","componentWillUnmount","render","questionDescription","Object","keys","options","map","key","undefined"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./Quiz.css\";\r\nimport Timer from \"./Timer\";\r\nimport Background from \"../../hoc/Background/Background\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Modal from \"../Modals/Modal\";\r\n\r\nclass TechQuiz extends React.Component {\r\n\tselectedOptions = [];\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tquizQuestions: [],\r\n\t\t\tcurrentQuestionIndex: 0,\r\n\t\t\tquestionId: [],\r\n\t\t\tfinalResponse: [],\r\n\t\t\toptionsIndex1: [\"d\", \"d\", \"d\", \"e\", \"e\", \"e\", \"e\", \"e\", \"e\", \"e\"],\r\n\t\t\toptionsIndex: [\"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\"],\r\n\t\t\tshowModal: false,\r\n\t\t\tblueButton: \"blueButton\",\r\n\t\t\tblackButton: \"blackButton\",\r\n\t\t};\r\n\t\tthis.submitQuiz = this.submitQuiz.bind(this);\r\n\t\tthis.showModal1 = this.showModal1.bind(this);\r\n\t\tthis.hideModal = this.hideModal.bind(this);\r\n\t}\r\n\r\n\tshowModal1() {\r\n\t\tthis.setState({\r\n\t\t\tshowModal: true,\r\n\t\t});\r\n\t}\r\n\r\n\thideModal() {\r\n\t\tthis.setState({\r\n\t\t\tshowModal: false,\r\n\t\t});\r\n\t}\r\n\r\n\tasync getQuizQuestions() {\r\n\t\tawait fetch(\r\n\t\t\t\"https://adgrecruitments.herokuapp.com/questions/technical/get-quiz-questions/1/web\",\r\n\t\t\t{\r\n\t\t\t\tmethod: \"GET\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\t\"auth-token\": sessionStorage.getItem(\"Token\"),\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t)\r\n\t\t\t.then((response) => {\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tquizQuestions: data,\r\n\t\t\t\t});\r\n\t\t\t\tthis.generateResponse();\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert(error.message);\r\n\t\t\t});\r\n\t}\r\n\r\n\tasync submitQuiz() {\r\n\t\tawait fetch(\r\n\t\t\t\"https://adgrecruitments.herokuapp.com/user/technical/submit\",\r\n\t\t\t{\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\t\"auth-token\": sessionStorage.getItem(\"Token\"),\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(this.state.finalResponse),\r\n\t\t\t}\r\n\t\t)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tthis.props.history.push(\"thank-you\");\r\n\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert(error.message);\r\n\t\t\t});\r\n\t}\r\n\r\n\toptionsArray = [\"a\", \"b\", \"c\", \"d\"];\r\n\r\n\tgetResponse() {\r\n\t\treturn this.state.finalResponse[this.state.currentQuestionIndex];\r\n\t}\r\n\r\n\tupdateOption(qid, index) {\r\n\t\tthis.state.finalResponse.forEach((question) => {\r\n\t\t\tif (question.qid === qid) {\r\n\t\t\t\tquestion.response = this.optionsArray[index];\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tblueButton: \"blackButton\",\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tgenerateResponse() {\r\n\t\tthis.state.quizQuestions.forEach((question) => {\r\n\t\t\tvar temp = {\r\n\t\t\t\tqid: question._id,\r\n\t\t\t\tresponse: \"e\",\r\n\t\t\t};\r\n\t\t\tthis.state.finalResponse.push(temp);\r\n\t\t});\r\n\t}\r\n\r\n\treturnQuestionID() {\r\n\t\treturn this.state.quizQuestions[this.state.currentQuestionIndex]._id;\r\n\t}\r\n\r\n\tgotoNextQuestion() {\r\n\t\tif (\r\n\t\t\tthis.state.currentQuestionIndex <\r\n\t\t\tthis.state.quizQuestions.length - 1\r\n\t\t) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentQuestionIndex: this.state.currentQuestionIndex + 1,\r\n\t\t\t\tblueButton: \"blueButton\",\r\n\t\t\t});\r\n\t\t} else return;\r\n\t}\r\n\r\n\tgotoPreviousQuestion() {\r\n\t\tif (this.state.currentQuestionIndex > 0)\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentQuestionIndex: this.state.currentQuestionIndex - 1,\r\n\t\t\t\tblueButton: \"blueButton\",\r\n\t\t\t});\r\n\t\telse return;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getQuizQuestions();\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.submitQuiz();\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (!sessionStorage.getItem(\"Token\")) {\r\n\t\t\treturn <Redirect to=\"/\" />;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<Background>\r\n\t\t\t\t{this.state.quizQuestions.length === 0 ? (\r\n\t\t\t\t\t<div className=\"loading\">Loading...</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"heading\">Technical Quiz</div>\r\n\t\t\t\t\t\t<div className=\"question-section\">\r\n\t\t\t\t\t\t\t<div className=\"question-count\">\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\tQuestion{\" \"}\r\n\t\t\t\t\t\t\t\t\t{this.state.currentQuestionIndex + 1}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t/{this.state.quizQuestions.length}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"tech-quiz\">\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.state.quizQuestions[\r\n\t\t\t\t\t\t\t\t\t\tthis.state.currentQuestionIndex\r\n\t\t\t\t\t\t\t\t\t].questionDescription\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"answer-section\">\r\n\t\t\t\t\t\t\t\t{Object.keys(\r\n\t\t\t\t\t\t\t\t\tthis.state.quizQuestions[\r\n\t\t\t\t\t\t\t\t\t\tthis.state.currentQuestionIndex\r\n\t\t\t\t\t\t\t\t\t].options\r\n\t\t\t\t\t\t\t\t).map((key, index) => {\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\tthis.state.finalResponse[\r\n\t\t\t\t\t\t\t\t\t\t\tthis.state.currentQuestionIndex\r\n\t\t\t\t\t\t\t\t\t\t] === undefined\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.updateOption(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.returnQuestionID(),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.blackButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.optionsArray[index]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.optionsArray[index]}.{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.quizQuestions[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.currentQuestionIndex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t].options[key]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\tthis.state.finalResponse[\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.currentQuestionIndex\r\n\t\t\t\t\t\t\t\t\t\t\t].response ===\r\n\t\t\t\t\t\t\t\t\t\t\tthis.optionsArray[index]\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.updateOption(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.returnQuestionID(),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.blueButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.optionsArray[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.optionsArray[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.quizQuestions[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.currentQuestionIndex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].options[key]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.updateOption(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.returnQuestionID(),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.blackButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.optionsArray[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.optionsArray[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.quizQuestions[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.currentQuestionIndex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].options[key]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"btn-bottom\">\r\n\t\t\t\t\t\t\t\t{this.state.currentQuestionIndex === 0 ? (\r\n\t\t\t\t\t\t\t\t\t<button disabled={true} id=\"disabled-btn\">\r\n\t\t\t\t\t\t\t\t\t\tPrevious\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.gotoPreviousQuestion();\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tPrevious\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{this.state.currentQuestionIndex === 9 ? (\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.showModal1();\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.gotoNextQuestion();\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\t\t\tshow={this.state.showModal}\r\n\t\t\t\t\t\t\t\t\tonHide={this.hideModal}\r\n\t\t\t\t\t\t\t\t\tsubmitQuiz={this.submitQuiz}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"timer\">\r\n\t\t\t\t\t\t\t\t<Timer />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Background>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TechQuiz;\r\n"]},"metadata":{},"sourceType":"module"}