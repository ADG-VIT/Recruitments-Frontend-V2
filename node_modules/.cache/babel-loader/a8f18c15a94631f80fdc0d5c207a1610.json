{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\abanm\\\\Desktop\\\\ADG-Recruitment-Portal-2k20\\\\src\\\\components\\\\Quiz\\\\MgmtQuiz.js\";\nimport React from \"react\";\nimport \"./Quiz.css\";\nimport Background from \"../../hoc/Background/Background\";\nimport Modal from \"../Modals/Modal\";\nimport axios from \"axios\";\n\nclass MgmtQuiz extends React.Component {\n  constructor(props) {\n    super(props);\n    this.responsesArray = [];\n    this.state = {\n      quizQuestions: [],\n      currentQuestionIndex: 0,\n      questionId: [],\n      showModal: false,\n      inputValues: [\"\", \"\", \"\", \"\", \"\", \"\"]\n    };\n    this.submitQuiz = this.submitQuiz.bind(this);\n    this.setResponsesArray = this.setResponsesArray.bind(this);\n    this.showModal1 = this.showModal1.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n  }\n\n  showModal1() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  hideModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  async getQuizQuestions() {\n    await fetch(\"https://adgrecruitments.herokuapp.com/questions/management/get-quiz-questions/web\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": sessionStorage.getItem(\"Token\")\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      this.setState({\n        quizQuestions: data\n      });\n    }).catch(error => {\n      alert(error.message); // this.history.push(\"/\");\n    });\n  }\n\n  submitQuiz() {\n    // console.log(e);\n    // e.preventDefault();\n    const data = JSON.stringify(this.responsesArray);\n    var config = {\n      method: \"post\",\n      url: \"https://adgrecruitments.herokuapp.com/user/management/submit\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": sessionStorage.getItem(\"Token\")\n      },\n      data: data\n    };\n    this.setState({\n      loading: true\n    });\n    axios(config).then(response => {\n      this.props.history.push(\"thank-you\");\n    }).catch(error => {\n      alert(error.message);\n    }); // await fetch(\n    //   \"https://adgrecruitments.herokuapp.com/user/management/submit\",\n    //   {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //       \"auth-token\": sessionStorage.getItem(\"Token\"),\n    //     },\n    //     body: JSON.stringify(this.responsesArray),\n    //   },\n    // )\n    //   .then((response) => {\n    //     return response.json();\n    //   })\n    //   .catch((error) => {\n    //     alert(error.message);\n    //   });\n  }\n\n  setResponsesArray(qid, e) {\n    var response = [...this.state.inputValues];\n    response[this.state.currentQuestionIndex] = e.target.value;\n    this.setState({\n      inputValues: response\n    });\n\n    if (this.responsesArray.some(response => response.qid === qid)) {\n      for (let i = 0; i < this.responsesArray.length; i++) {\n        if (this.responsesArray[i].qid === qid) {\n          this.responsesArray[i].response = e.target.value;\n        }\n      }\n    } else {\n      this.responsesArray.push({\n        qid: qid,\n        response: e.target.value\n      });\n    }\n  }\n\n  gotoNextQuestion() {\n    if (this.state.currentQuestionIndex < this.state.quizQuestions.length - 1) {\n      this.setState({\n        currentQuestionIndex: this.state.currentQuestionIndex + 1\n      });\n    } else return;\n  }\n\n  gotoPreviousQuestion() {\n    if (this.state.currentQuestionIndex > 0) {\n      this.setState({\n        currentQuestionIndex: this.state.currentQuestionIndex - 1\n      });\n    } else return;\n  }\n\n  componentDidMount() {\n    this.getQuizQuestions();\n  }\n\n  componentWillUnmount() {\n    this.submitQuiz();\n    window.location.href = \"/\";\n  }\n\n  render() {\n    if (!sessionStorage.getItem(\"Token\")) {\n      this.props.history.push(\"/\");\n    }\n\n    return /*#__PURE__*/_jsxDEV(Background, {\n      children: this.state.quizQuestions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: \"Management Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-count\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Question \", this.state.currentQuestionIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), \"/\", this.state.quizQuestions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"management-quiz\",\n            children: this.state.quizQuestions[this.state.currentQuestionIndex].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-section\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"mgmt-answer\",\n              placeholder: \"Enter your answer...\",\n              value: this.state.inputValues[this.state.currentQuestionIndex],\n              onChange: e => {\n                this.setResponsesArray(this.state.quizQuestions[this.state.currentQuestionIndex]._id, e);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-bottom\",\n            children: [this.state.currentQuestionIndex === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: true,\n              id: \"disabled-btn\",\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.gotoPreviousQuestion();\n              },\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this), this.state.currentQuestionIndex === 4 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.showModal1();\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.gotoNextQuestion();\n              },\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              show: this.state.showModal,\n              onHide: this.hideModal,\n              submitQuiz: this.submitQuiz\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MgmtQuiz;","map":{"version":3,"sources":["C:/Users/abanm/Desktop/ADG-Recruitment-Portal-2k20/src/components/Quiz/MgmtQuiz.js"],"names":["React","Background","Modal","axios","MgmtQuiz","Component","constructor","props","responsesArray","state","quizQuestions","currentQuestionIndex","questionId","showModal","inputValues","submitQuiz","bind","setResponsesArray","showModal1","hideModal","setState","getQuizQuestions","fetch","method","headers","sessionStorage","getItem","then","response","json","data","catch","error","alert","message","JSON","stringify","config","url","loading","history","push","qid","e","target","value","some","i","length","gotoNextQuestion","gotoPreviousQuestion","componentDidMount","componentWillUnmount","window","location","href","render","description","_id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./Quiz.css\";\r\nimport Background from \"../../hoc/Background/Background\";\r\nimport Modal from \"../Modals/Modal\";\r\nimport axios from \"axios\";\r\n\r\nclass MgmtQuiz extends React.Component {\r\n  responsesArray = [];\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      quizQuestions: [],\r\n      currentQuestionIndex: 0,\r\n      questionId: [],\r\n      showModal: false,\r\n      inputValues: [\"\", \"\", \"\", \"\", \"\", \"\"],\r\n    };\r\n    this.submitQuiz = this.submitQuiz.bind(this);\r\n    this.setResponsesArray = this.setResponsesArray.bind(this);\r\n    this.showModal1 = this.showModal1.bind(this);\r\n    this.hideModal = this.hideModal.bind(this);\r\n  }\r\n\r\n  showModal1() {\r\n    this.setState({\r\n      showModal: true,\r\n    });\r\n  }\r\n\r\n  hideModal() {\r\n    this.setState({\r\n      showModal: false,\r\n    });\r\n  }\r\n\r\n  async getQuizQuestions() {\r\n    await fetch(\r\n      \"https://adgrecruitments.herokuapp.com/questions/management/get-quiz-questions/web\",\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"auth-token\": sessionStorage.getItem(\"Token\"),\r\n        },\r\n      },\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        this.setState({\r\n          quizQuestions: data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n        // this.history.push(\"/\");\r\n      });\r\n  }\r\n\r\n  submitQuiz() {\r\n    // console.log(e);\r\n    // e.preventDefault();\r\n    const data = JSON.stringify(this.responsesArray);\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"https://adgrecruitments.herokuapp.com/user/management/submit\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\": sessionStorage.getItem(\"Token\"),\r\n      },\r\n      data: data,\r\n    };\r\n    this.setState({ loading: true });\r\n    axios(config)\r\n      .then((response) => {\r\n        this.props.history.push(\"thank-you\");\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n\r\n    // await fetch(\r\n    //   \"https://adgrecruitments.herokuapp.com/user/management/submit\",\r\n    //   {\r\n    //     method: \"POST\",\r\n    //     headers: {\r\n    //       \"Content-Type\": \"application/json\",\r\n    //       \"auth-token\": sessionStorage.getItem(\"Token\"),\r\n    //     },\r\n    //     body: JSON.stringify(this.responsesArray),\r\n    //   },\r\n    // )\r\n    //   .then((response) => {\r\n    //     return response.json();\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     alert(error.message);\r\n    //   });\r\n  }\r\n\r\n  setResponsesArray(qid, e) {\r\n    var response = [...this.state.inputValues];\r\n    response[this.state.currentQuestionIndex] = e.target.value;\r\n    this.setState({ inputValues: response });\r\n    if (this.responsesArray.some((response) => response.qid === qid)) {\r\n      for (let i = 0; i < this.responsesArray.length; i++) {\r\n        if (this.responsesArray[i].qid === qid) {\r\n          this.responsesArray[i].response = e.target.value;\r\n        }\r\n      }\r\n    } else {\r\n      this.responsesArray.push({ qid: qid, response: e.target.value });\r\n    }\r\n  }\r\n\r\n  gotoNextQuestion() {\r\n    if (this.state.currentQuestionIndex < this.state.quizQuestions.length - 1) {\r\n      this.setState({\r\n        currentQuestionIndex: this.state.currentQuestionIndex + 1,\r\n      });\r\n    } else return;\r\n  }\r\n  gotoPreviousQuestion() {\r\n    if (this.state.currentQuestionIndex > 0) {\r\n      this.setState({\r\n        currentQuestionIndex: this.state.currentQuestionIndex - 1,\r\n      });\r\n    } else return;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getQuizQuestions();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.submitQuiz();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    if (!sessionStorage.getItem(\"Token\")) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n    return (\r\n      <Background>\r\n        {this.state.quizQuestions.length === 0 ? (\r\n          <div className='loading'>Loading...</div>\r\n        ) : (\r\n          <>\r\n            <div className='heading'>Management Quiz</div>\r\n            <div className='question-section'>\r\n              <div className='question-count'>\r\n                <span>Question {this.state.currentQuestionIndex + 1}</span>/\r\n                {this.state.quizQuestions.length}\r\n              </div>\r\n              <div className='management-quiz'>\r\n                {\r\n                  this.state.quizQuestions[this.state.currentQuestionIndex]\r\n                    .description\r\n                }\r\n              </div>\r\n              <div className='answer-section'>\r\n                <textarea\r\n                  className='mgmt-answer'\r\n                  placeholder='Enter your answer...'\r\n                  value={\r\n                    this.state.inputValues[this.state.currentQuestionIndex]\r\n                  }\r\n                  onChange={(e) => {\r\n                    this.setResponsesArray(\r\n                      this.state.quizQuestions[this.state.currentQuestionIndex]\r\n                        ._id,\r\n                      e,\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='btn-bottom'>\r\n                {this.state.currentQuestionIndex === 0 ? (\r\n                  <button disabled={true} id='disabled-btn'>\r\n                    Previous\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    onClick={() => {\r\n                      this.gotoPreviousQuestion();\r\n                    }}>\r\n                    Previous\r\n                  </button>\r\n                )}\r\n                {this.state.currentQuestionIndex === 4 ? (\r\n                  <button\r\n                    onClick={() => {\r\n                      this.showModal1();\r\n                    }}>\r\n                    Submit\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    onClick={() => {\r\n                      this.gotoNextQuestion();\r\n                    }}>\r\n                    Next\r\n                  </button>\r\n                )}\r\n                <Modal\r\n                  show={this.state.showModal}\r\n                  onHide={this.hideModal}\r\n                  submitQuiz={this.submitQuiz}\r\n                />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Background>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MgmtQuiz;\r\n"]},"metadata":{},"sourceType":"module"}